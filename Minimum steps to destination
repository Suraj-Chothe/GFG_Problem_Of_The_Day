'''Given an infinite number line. You start at 0 and can go either to the left or to the right.
The condition is that in the ith move, you must take i steps. Given a destination d, find the 
minimum number of steps required to reach that destination.

Example 1:

Input: d = 2
Output: 3
Explaination: The steps taken are +1, -2 and +3.
Example 2:

Input: d = 10
Output: 4
Explaination: The steps taken are +1, +2, +3 and +4.
Your Task:
You do not need to read input or print anything. Your task is to complete the function minSteps() 
which takes the value d as input parameter and returns the minimum number of steps required to 
reach the destination d from 0.

Expected Time Complexity: O(sqrt(d))
Expected Auxiliary Space: O(1)

Constraints:
1 ≤ d ≤ 10000
'''



#User function Template for python3
class Solution:
    def minSteps(self, d):
        if d == 0:
            return 0

        steps, sum_steps = 0, 0
        while sum_steps < d:
            steps += 1
            sum_steps += steps

        if sum_steps == d:
            return steps

        diff = sum_steps - d
        if diff % 2 == 0:
            return steps
        else:
            while diff % 2 != 0:
                steps += 1
                sum_steps += steps
                diff = sum_steps - d
            return steps
